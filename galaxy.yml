namespace: machacekondra

name: openshift_install

version: 1.0.0

readme: README.md

authors:
  - Ondra Machacek <omachace@redhat.com>

### OPTIONAL but strongly recommended
description: Install the Openshift on baremetal/vsphere using agent-install. Configure DNS/LB infrastructure.

license:
  - GPL-2.0-or-later

license_file: ''

tags: ['openshift', 'vmware', 'infoblox', 'f5', 'infrastructure']

# Collections that this collection requires to be installed for it to be usable. The key of the dict is the
# collection label 'namespace.name'. The value is a version range
# L(specifiers,https://python-semanticversion.readthedocs.io/en/latest/#requirement-specification). Multiple version
# range specifiers can be set and are separated by ','
dependencies: {
  "infoblox.nios_modules": ">=1.5.0",
  "f5networks.f5_modules": ">=1.27.0",
  "vmware.vmware_rest": ">=2.3.1",
  "community.vmware": ">=4.0.0",
  "community.hashi_vault": ">=5.0.0",
  "containers.podman": ">=1.11.0",
  "kubernetes.core": ">=2.4.0"
}

# The URL of the originating SCM repository
repository: https://github.com/machacekondra/openshift_install

# The URL to any online docs
documentation: https://github.com/machacekondra/openshift_install

# The URL to the homepage of the collection/project
homepage: https://github.com/machacekondra/openshift_install

# The URL to the collection issue tracker
issues: https://github.com/machacekondra/openshift_install/issues

# A list of file glob-like patterns used to filter any files or directories that should not be included in the build
# artifact. A pattern is matched from the relative path of the file or directory of the collection directory. This
# uses 'fnmatch' to match the files or directories. Some directories and files like 'galaxy.yml', '*.pyc', '*.retry',
# and '.git' are always filtered. Mutually exclusive with 'manifest'
build_ignore: []

# A dict controlling use of manifest directives used in building the collection artifact. The key 'directives' is a
# list of MANIFEST.in style
# L(directives,https://packaging.python.org/en/latest/guides/using-manifest-in/#manifest-in-commands). The key
# 'omit_default_directives' is a boolean that controls whether the default directives are used. Mutually exclusive
# with 'build_ignore'
# manifest: null
